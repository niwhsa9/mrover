<launch>
    <arg name="sim" default="false" />
    <arg name="use_ekf" default="true" />
    <arg name="ekf_start_delay" default="0" />

    <rosparam command="load" file="$(find mrover)/config/localization.yaml" />
    <rosparam command="load" file="$(find mrover)/config/esw.yaml" />
    <rosparam command="load" file="$(find mrover)/config/inv_ekf.yaml" />
    <rosparam if="$(arg sim)" command="load" file="$(find mrover)/config/sim_ekf.yaml" />
    <rosparam unless="$(arg sim)" command="load" file="$(find mrover)/config/ekf.yaml" />


    <!-- Invariant EKF -->
    <node if="$(arg use_ekf)" name="inv_ekf" pkg="mrover" type="invariant_ekf" output="screen" 
        launch-prefix="bash -c 'sleep 5; $0 $@'" />

    <!-- Passthrough filter to replace EKF in data path -->
    <!-- <node unless="$(arg use_ekf)" pkg="mrover" type="passthrough_filter.py"
        name="passthrough_filter" /> -->

    <!-- Linearize GPS from geodetic to ENU cartesian coords -->
    <node name="gps_linearization" pkg="mrover" type="gps_linearization.py" output="screen" />

    <!-- Launch IMU driver -->
    <node unless="$(arg sim)" name="imu_driver" pkg="mrover" type="imu_driver.py" output="screen" />

    <!-- Launch GPS driver -->
    <group ns="gps">
        <node unless="$(arg sim)" name="gps_driver" pkg="mrover" type="gps_driver.py" output="screen" />
    </group>

</launch>