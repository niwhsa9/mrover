auton_led_driver:
  port: "/dev/auton_led"
  baud: 115200

gps_driver:
  port: "/dev/gps"
  baud: 115200
  useRMC: false # get covariance instead of velocity, see wiki for more info
  frame_id: "base_link"

imu_driver:
  port: "/dev/imu"
  baud: 115200
  frame_id: "imu_link"

can:
  devices: 
    - name: "jetson"
      bus: 0
      id: 0x10
    - name: "front_left"
      bus: 0
      id: 0x11
    - name: "front_right"
      bus: 0
      id: 0x12
    - name: "middle_left"
      bus: 0
      id: 0x13
    - name: "middle_right"
      bus: 0
      id: 0x14
    - name: "back_left"
      bus: 0
      id: 0x15
    - name: "back_right"
      bus: 0
      id: 0x16
    - name: "joint_a"
      bus: 0
      id: 0x17
    - name: "joint_b"
      bus: 0
      id: 0x18
    - name: "joint_c"
      bus: 0
      id: 0x19
    - name: "joint_de_0"
      bus: 0
      id: 0x20
    - name: "joint_de_1"
      bus: 0
      id: 0x21
    - name: "allen_key"
      bus: 0
      id: 0x22
    - name: "gripper"
      bus: 0
      id: 0x23
    - name: "mast_gimbal_x"
      bus: 0
      id: 0x24
    - name: "mast_gimbal_y"
      bus: 0
      id: 0x25
    - name: "sa_x"
      bus: 0
      id: 0x26
    - name: "sa_y"
      bus: 0
      id: 0x27
    - name: "sa_z"
      bus: 0
      id: 0x28
    - name: "scoop"
      bus: 0
      id: 0x29
    - name: "sensor_actuator"
      bus: 0
      id: 0x30
    - name: "cache"
      bus: 0
      id: 0x31
    - name: "pdlb"
      bus: 0
      id: 0x32
    - name: "science"
      bus: 0
      id: 0x33

brushed_motors:
  controllers:
    # - name: "example"
    #   gear_ratio: 1  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
    #   limit_a_present: false
    #   limit_b_present: false
    #   limit_c_present: false
    #   limit_d_present: false
    #   limit_a_default_enabled: false
    #   limit_b_default_enabled: false
    #   limit_c_default_enabled: false
    #   limit_d_default_enabled: false
    #   limit_a_is_active_high: true
    #   limit_b_is_active_high: true
    #   limit_c_is_active_high: true
    #   limit_d_is_active_high: true
    #   limit_a_limits_fwd: true
    #   limit_b_limits_fwd: true
    #   limit_c_limits_fwd: true
    #   limit_d_limits_fwd: true
    #   limit_a_used_for_readjustment: false
    #   limit_b_used_for_readjustment: false
    #   limit_c_used_for_readjustment: false
    #   limit_d_used_for_readjustment: false
    #   quad_present: false
    #   quad_is_fwd_polarity: true
    #   abs_present: false
    #   abs_is_fwd_polarity: true
    #   limit_a_readjust_position: 0  # radians
    #   limit_b_readjust_position: 0  # radians
    #   limit_c_readjust_position: 0  # radians
    #   limit_d_readjust_position: 0  # radians
    #   quad_ratio: 1  # encoder ratio compared to motor
    #   abs_ratio: 1  # encoder ratio compared to motor
    #   abs_encoder_offset: 0 # 0 for joint position corresponds to this radians reading by absolute encoder
    #   driver_voltage: 24  # used to calculate max pwm
    #   motor_max_voltage: 12  # used to calculate max pwm
    #   limit_max_forward_pos: false
    #   limit_max_backward_pos: false
    #   max_forward_pos: 1
    #   max_backward_pos: 0
    - name: "joint_b"
      gear_ratio: 1  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_a_default_enabled: true
      limit_a_is_active_high: true
      limit_a_limits_fwd: false
      limit_a_used_for_readjustment: true
      abs_present: true
      abs_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      abs_ratio: 1  # encoder ratio compared to motor
      abs_encoder_offset: 0 # 0 for joint position corresponds to this radians reading by absolute encoder
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 12  # used to calculate max pwm
      limit_max_forward_pos: true
      max_forward_pos: 1
    - name: "allen_key"
      gear_ratio: 30  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: true
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      quad_ratio: 1  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 12  # used to calculate max pwm
    - name: "gripper"
      gear_ratio: 47  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      quad_present: false
      quad_is_fwd_polarity: true
      abs_present: false
      abs_is_fwd_polarity: true
      quad_ratio: 1  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 12  # used to calculate max pwm
    - name: "mast_gimbal_x"
      gear_ratio: 1000  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 6.28  # radians
      quad_ratio: 1  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 12  # used to calculate max pwm
    - name: "mast_gimbal_y"
      gear_ratio: 1000  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 12  # used to calculate max pwm
    - name: "sa_x"
      gear_ratio: 75  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_c_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_c_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_c_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_c_limits_fwd: true
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      limit_c_used_for_readjustment: false
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      quad_ratio: 48  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
    - name: "sa_y"
      gear_ratio: 75  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      quad_ratio: 48  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
    - name: "sa_z"
      gear_ratio: 75  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      quad_ratio: 48  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
    - name: "scoop"
      gear_ratio: 75  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      quad_present: true
      quad_is_fwd_polarity: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      quad_ratio: 48  # encoder ratio compared to motor
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
    - name: "sensor_actuator"
      gear_ratio: 1  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
    - name: "cache"
      gear_ratio: 1  # motor ratio compared to joint, e.g. if 5, then 5 rotations of motor = 1 rotation of joint
      limit_a_present: true
      limit_b_present: true
      limit_a_default_enabled: true
      limit_b_default_enabled: true
      limit_a_is_active_high: true
      limit_b_is_active_high: true
      limit_a_limits_fwd: true
      limit_b_limits_fwd: false
      limit_a_used_for_readjustment: true
      limit_b_used_for_readjustment: true
      limit_a_readjust_position: 0  # radians
      limit_b_readjust_position: 0  # radians
      driver_voltage: 24  # used to calculate max pwm
      motor_max_voltage: 6  # used to calculate max pwm
cameras:
  camera_type_info:
    # vendor_id and vendor is obtained by running `udevadm info --query=all /dev/video0`
    # width and height are obtained by running `v4l2-ctl -d /dev/video0 --list-formats-ext`
    # An important thing to know is that actual bps is much less than bps in config.
    # However, we need to keep bps in config higher otherwise there is too much compression
    regular:
      vendor_id: "32e4"
      vendor: "HD_USB_Camera"
      use_jpeg: true
      quality_options:
        - width: 320
          height: 240
          fps: 15
          bps: 173000
        - width: 352
          height: 288
          fps: 15
          bps: 691000
        - width: 640
          height: 480
          fps: 15
          bps: 2000000
        - width: 960
          height: 720
          fps: 15
          bps: 3000000
        - width: 1280
          height: 720
          fps: 15
          bps: 4200000
    microscope:
      vendor_id: "a16f"
      vendor: "GenesysLogic_Technology_Co.__Ltd."
      use_jpeg: false
      quality_options:
        - width: 160
          height: 120
          fps: 25
          bps: 173000
        - width: 176
          height: 144
          fps: 25
          bps: 691000
        - width: 320
          height: 240
          fps: 25
          bps: 2000000
        - width: 352
          height: 288
          fps: 25
          bps: 3000000
        - width: 640
          height: 480
          fps: 25
          bps: 4200000
    res_1080:
      vendor_id: "0c45"
      vendor: "Sonix_Technology_Co.__Ltd."
      use_jpeg: true
      quality_options:
        - width: 320
          height: 240
          fps: 30
          bps: 173000
        - width: 800
          height: 600
          fps: 30
          bps: 691000
        - width: 960
          height: 720
          fps: 30
          bps: 2000000
        - width: 1280
          height: 720
          fps: 30
          bps: 3000000
        - width: 1920
          height: 1080
          fps: 30
          bps: 4200000
    rock_4k:
      vendor_id: "0c45"
      vendor: "Arducam_Technology_Co.__Ltd."
      use_jpeg: true
      quality_options:
        # Only have some resolutions since there are only a few
        # with the same aspect ratio. When changing aspect ratios,
        # there are sometimes issues with decoding jpeg images.
        # We also reuse some resolutions so that we the default
        # resolution (option 2) is not maximum quality (which
        # has some delay of ~2 seconds).
        - width: 640
          height: 480
          fps: 30
          bps: 173000
        - width: 640
          height: 480
          fps: 30
          bps: 173000
        - width: 1600
          height: 1200
          fps: 30
          bps: 7000000
        - width: 1600
          height: 1200
          fps: 30
          bps: 7000000
        - width: 3264
          height: 2448
          fps: 15
          bps: 9000000
  max_num_resolutions: 5
  # Number of devices corresponds to number of cmds in
  #   - ChangeCameras.srv
  #   - ResetCameras.srv
  max_streams: 4
  max_device_id: 20
  ips:
    primary: "10.0.0.7"
    secondary: "10.0.0.8"

science:
  auton_color_ids:
    red: 0
    green: 1
    blue: 2
    "off": 3
  device_mosfet_numbers:
    arm_laser: 6
    raman_laser: 0
    uv_led_carousel: 1
    uv_led_end_effector: 6
    white_led: 2
  # How fast the GUI should send heater service requests in ms
  heater_service_request_interval: 1000
  serial:
    baud_rate: 9600
    timeout: 0
    port: "/dev/ttyTHS0" 
  # These position are random for now
  servo_id_by_site:  # This is in degrees
    A: 2
    B: 1
    C: 0
  servo_positions:
    - pushed: 70
      start: 100
    - pushed: 60
      start: 90
    - pushed: 0
      start: 80
  info:
    mcu_active_timeout_s: 2
    mcu_reset_period_s: 20
    num_diag_current: 3
    num_diag_thermistors: 3
    num_science_thermistors: 3
    num_spectral: 1
    sleep: 0.01
    uart_transmit_msg_len: 30

rover:
  length: 0.86
  width: 0.86
  max_speed: 2.0

wheel:
  gear_ratio: 50.0
  radius: 0.13

arm:
  controllers:
    joint_a:
      multiplier: 1
    joint_b:
      multiplier: 1
    joint_c:
      multiplier: 1
    joint_de:
      multiplier: 1
    finger:
      multiplier: 1
    gripper:
      multiplier: 1

drive:
  controllers:
    FrontLeft:
      multiplier: 1
    FrontRight:
      multiplier: 1
    MiddleLeft:
      multiplier: 1
    MiddleRight:
      multiplier: 1
    BackLeft:
      multiplier: 1
    BackRight:
      multiplier: 1

motors:
  joint_a:
    type: "brushless"
  joint_b:
    type: "brushed"
  joint_c:
    type: "brushed"
  joint_de:
    type: "brushed"
  finger:
    type: "brushed"
  gripper:
    type: "brushless"
  FrontLeft:
    type: "brushless"
  FrontRight:
    type: "brushless"
  MiddleLeft:
    type: "brushless"
  MiddleRight:
    type: "brushless"
  BackLeft:
    type: "brushless"
  BackRight:
    type: "brushless"
  joint_c:
    type: "brushless"
  joint_d:
    type: "brushless"
  joint_e:
    type: "brushless"

brushless:
  using_pi3_hat: true
  drive:
    max_torque: 0.3
    controllers:
      FrontLeft:
        id: 2
        bus: 5
        multiplier: -1
        gear_ratio: 50
      FrontRight:
        id: 3
        bus: 2
        multiplier: 1
        gear_ratio: 50
      MiddleLeft:
        id: 1
        bus: 5
        multiplier: -1
        gear_ratio: 50
      MiddleRight:
        id: 4
        bus: 2
        multiplier: -1
        gear_ratio: 50
      BackLeft:
        id: 0
        bus: 5
        multiplier: -1
        gear_ratio: 50
      BackRight:
        id: 5
        bus: 2
        multiplier: 1
        gear_ratio: 50
  arm:
    controllers:
      joint_c:
        id: 6
        bus: 3
        max_rps: 80
        max_torque: 0.7
        multiplier: -1
        gear_ratio: 484
      joint_d:
        id: 7
        bus: 3
        max_rps: 80
        max_torque: 0.3
        multiplier: -1
        gear_ratio: 484
      joint_e:
        id: 8
        bus: 3
        max_rps: 80
        max_torque: 0.3
        multiplier: 1
        gear_ratio: 484

default_network_iface: "enp0s31f6"
